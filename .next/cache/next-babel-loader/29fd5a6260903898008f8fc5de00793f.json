{"ast":null,"code":"var _jsxFileName = \"/Users/abby.gottlich/Documents/hello-next/comps/MyLayout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"./Header\";\nvar layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n}; // Method #1 - using props.children\n// This method will render all of the child tags you put inside of the Layout tag within your index/about pages\n\nvar Layout = function Layout(props) {\n  return __jsx(\"div\", {\n    style: layoutStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), props.children);\n}; // export default Layout;\n// Method #2 - Layout as a Higher Order Component\n// This method takes in the variable Page that was created in your index/about\n// pages that has been set equal to the content you want displayed and renders it\n\n\nvar pageLayout = function pageLayout(Page) {\n  return function () {\n    return __jsx(\"div\", {\n      style: layoutStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), __jsx(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  };\n}; // export default pageLayout;\n// Method #3 - Page content as a prop\n\n\nvar contentLayout = function contentLayout(props) {\n  return __jsx(\"div\", {\n    style: layoutStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), props.content);\n};\n\nexport default contentLayout;","map":{"version":3,"sources":["/Users/abby.gottlich/Documents/hello-next/comps/MyLayout.js"],"names":["Header","layoutStyle","margin","padding","border","Layout","props","children","pageLayout","Page","contentLayout","content"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,EADQ;AAEhBC,EAAAA,OAAO,EAAE,EAFO;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAApB,C,CAMA;AACA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAChB;AAAK,IAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKK,KAAK,CAACC,QAFX,CADgB;AAAA,CAApB,C,CAOA;AAIA;AACA;AACA;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACvB,SAAO;AAAA,WACH;AAAK,MAAA,KAAK,EAAER,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADG;AAAA,GAAP;AAMH,CAPD,C,CASA;AAGA;;;AACA,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAJ,KAAK;AAAA,SACvB;AAAK,IAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKK,KAAK,CAACK,OAFX,CADuB;AAAA,CAA3B;;AAOA,eAAeD,aAAf","sourcesContent":["import Header from \"./Header\";\n\nconst layoutStyle = {\n    margin: 20,\n    padding: 20,\n    border: '1px solid #DDD'\n};\n\n// Method #1 - using props.children\n// This method will render all of the child tags you put inside of the Layout tag within your index/about pages\nconst Layout = props => (\n    <div style={layoutStyle}>\n        <Header />\n        {props.children}\n    </div>\n);\n\n// export default Layout;\n\n\n\n// Method #2 - Layout as a Higher Order Component\n// This method takes in the variable Page that was created in your index/about\n// pages that has been set equal to the content you want displayed and renders it\nconst pageLayout = Page => {\n    return () => (\n        <div style={layoutStyle}>\n            <Header />\n            <Page />\n        </div>\n    );\n};\n\n// export default pageLayout;\n\n\n// Method #3 - Page content as a prop\nconst contentLayout = props => (\n    <div style={layoutStyle}>\n        <Header />\n        {props.content}\n    </div>\n);\n\nexport default contentLayout;\n\n"]},"metadata":{},"sourceType":"module"}