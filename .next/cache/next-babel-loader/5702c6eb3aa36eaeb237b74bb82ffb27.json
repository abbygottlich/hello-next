{"ast":null,"code":"var _jsxFileName = \"/Users/abby.gottlich/Documents/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../comps/MyLayout\";\nimport Link from \"next/link\"; // import fetch from 'isomorphic-unfetch';\n// import pageLayout from \"../comps/MyLayout\";\n// import contentLayout from \"../comps/MyLayout\";\n// Method #1 - using props.children\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <p>Hello Next.js</p>\n//         </Layout>\n//     )\n// };\n// Method #2 - Layout as a Higher Order Component\n// const Page = () => <p>Hello Next.js</p>;\n// export default pageLayout(Page);\n// Method #3 - Page content as a prop\n// const indexPageContent = <p>Hello Next.js</p>;\n// export default function Index() {\n//     return <Layout content={indexPageContent} />\n// }\n// blog post code\n// const PostLink = props => (\n//     <li>\n//         {/* this is basically saying, link to the [id] file, but make the path the same as the prop id below */}\n//         <Link href=\"p/[id]\" as={`/p/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// );\n// export default function Blog() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"hello-nextjs\" />\n//                 <PostLink id=\"learn-nextjs\" />\n//                 <PostLink id=\"deploy-nextjs\" />\n//             </ul>\n//         </Layout>\n//     );\n// }\n// batman shows code\n// getting props from Index.getInitialProps below\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {/* mapping over the returned shows object from function below */}\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     {/* actually routing you to [id].js page, but displaying the show id in the url */}\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n// // whatever this function returns will be the props for the Index function above\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     // this console log only shows up in the server console because when the site is first rendered, it renders on the server side\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     // console.log(data);\n//     return {\n//         // what you are mapping over in the above function (props.shows)\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n// export default Index;\n// styling components\n\nfunction getPosts() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-361259950\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"ul\", {\n    className: \"jsx-361259950\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, getPosts().map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      className: \"jsx-361259950\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"jsx-361259950\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, post.title)));\n  })), __jsx(_JSXStyle, {\n    id: \"361259950\",\n    __self: this\n  }, \"h1.jsx-361259950,a.jsx-361259950{font-family:'Arial;                }                ul {                    padding: 0;                }                li {                    list-style: none;                    margin: 5px 0;                }                a {                    text-decoration: none;                    color: blue;                }                a:hover {                    opacity: 0.6;                };}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hYmJ5LmdvdHRsaWNoL0RvY3VtZW50cy9oZWxsby1uZXh0L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJHd0IsQUF3QmEsOFlBQUMiLCJmaWxlIjoiL1VzZXJzL2FiYnkuZ290dGxpY2gvRG9jdW1lbnRzL2hlbGxvLW5leHQvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wcy9NeUxheW91dFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuLy8gaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG4vLyBpbXBvcnQgcGFnZUxheW91dCBmcm9tIFwiLi4vY29tcHMvTXlMYXlvdXRcIjtcbi8vIGltcG9ydCBjb250ZW50TGF5b3V0IGZyb20gXCIuLi9jb21wcy9NeUxheW91dFwiO1xuXG4vLyBNZXRob2QgIzEgLSB1c2luZyBwcm9wcy5jaGlsZHJlblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4vLyAgICAgcmV0dXJuIChcbi8vICAgICAgICAgPExheW91dD5cbi8vICAgICAgICAgICAgIDxwPkhlbGxvIE5leHQuanM8L3A+XG4vLyAgICAgICAgIDwvTGF5b3V0PlxuLy8gICAgIClcbi8vIH07XG5cbi8vIE1ldGhvZCAjMiAtIExheW91dCBhcyBhIEhpZ2hlciBPcmRlciBDb21wb25lbnRcbi8vIGNvbnN0IFBhZ2UgPSAoKSA9PiA8cD5IZWxsbyBOZXh0LmpzPC9wPjtcbi8vIGV4cG9ydCBkZWZhdWx0IHBhZ2VMYXlvdXQoUGFnZSk7XG5cbi8vIE1ldGhvZCAjMyAtIFBhZ2UgY29udGVudCBhcyBhIHByb3Bcbi8vIGNvbnN0IGluZGV4UGFnZUNvbnRlbnQgPSA8cD5IZWxsbyBOZXh0LmpzPC9wPjtcblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XG4vLyAgICAgcmV0dXJuIDxMYXlvdXQgY29udGVudD17aW5kZXhQYWdlQ29udGVudH0gLz5cbi8vIH1cblxuXG5cblxuLy8gYmxvZyBwb3N0IGNvZGVcbi8vIGNvbnN0IFBvc3RMaW5rID0gcHJvcHMgPT4gKFxuLy8gICAgIDxsaT5cbi8vICAgICAgICAgey8qIHRoaXMgaXMgYmFzaWNhbGx5IHNheWluZywgbGluayB0byB0aGUgW2lkXSBmaWxlLCBidXQgbWFrZSB0aGUgcGF0aCB0aGUgc2FtZSBhcyB0aGUgcHJvcCBpZCBiZWxvdyAqL31cbi8vICAgICAgICAgPExpbmsgaHJlZj1cInAvW2lkXVwiIGFzPXtgL3AvJHtwcm9wcy5pZH1gfT5cbi8vICAgICAgICAgICAgIDxhPntwcm9wcy5pZH08L2E+XG4vLyAgICAgICAgIDwvTGluaz5cbi8vICAgICA8L2xpPlxuLy8gKTtcbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJsb2coKSB7XG4vLyAgICAgcmV0dXJuIChcbi8vICAgICAgICAgPExheW91dD5cbi8vICAgICAgICAgICAgIDxoMT5NeSBCbG9nPC9oMT5cbi8vICAgICAgICAgICAgIDx1bD5cbi8vICAgICAgICAgICAgICAgICA8UG9zdExpbmsgaWQ9XCJoZWxsby1uZXh0anNcIiAvPlxuLy8gICAgICAgICAgICAgICAgIDxQb3N0TGluayBpZD1cImxlYXJuLW5leHRqc1wiIC8+XG4vLyAgICAgICAgICAgICAgICAgPFBvc3RMaW5rIGlkPVwiZGVwbG95LW5leHRqc1wiIC8+XG4vLyAgICAgICAgICAgICA8L3VsPlxuLy8gICAgICAgICA8L0xheW91dD5cbi8vICAgICApO1xuLy8gfVxuXG5cblxuXG4vLyBiYXRtYW4gc2hvd3MgY29kZVxuLy8gZ2V0dGluZyBwcm9wcyBmcm9tIEluZGV4LmdldEluaXRpYWxQcm9wcyBiZWxvd1xuLy8gY29uc3QgSW5kZXggPSBwcm9wcyA9PiAoXG4vLyAgICAgPExheW91dD5cbi8vICAgICAgICAgPGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG4vLyAgICAgICAgIDx1bD5cbi8vICAgICAgICAgICAgIHsvKiBtYXBwaW5nIG92ZXIgdGhlIHJldHVybmVkIHNob3dzIG9iamVjdCBmcm9tIGZ1bmN0aW9uIGJlbG93ICovfVxuLy8gICAgICAgICAgICAge3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcbi8vICAgICAgICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cbi8vICAgICAgICAgICAgICAgICAgICAgey8qIGFjdHVhbGx5IHJvdXRpbmcgeW91IHRvIFtpZF0uanMgcGFnZSwgYnV0IGRpc3BsYXlpbmcgdGhlIHNob3cgaWQgaW4gdGhlIHVybCAqL31cbi8vICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxuLy8gICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgICAgICAgICAgPC9saT5cbi8vICAgICAgICAgICAgICkpfVxuLy8gICAgICAgICA8L3VsPlxuLy8gICAgIDwvTGF5b3V0PlxuLy8gKTtcblxuLy8gLy8gd2hhdGV2ZXIgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHdpbGwgYmUgdGhlIHByb3BzIGZvciB0aGUgSW5kZXggZnVuY3Rpb24gYWJvdmVcbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuLy8gICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuLy8gICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4vLyAgICAgLy8gdGhpcyBjb25zb2xlIGxvZyBvbmx5IHNob3dzIHVwIGluIHRoZSBzZXJ2ZXIgY29uc29sZSBiZWNhdXNlIHdoZW4gdGhlIHNpdGUgaXMgZmlyc3QgcmVuZGVyZWQsIGl0IHJlbmRlcnMgb24gdGhlIHNlcnZlciBzaWRlXG4vLyAgICAgY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcbi8vICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcblxuLy8gICAgIHJldHVybiB7XG4vLyAgICAgICAgIC8vIHdoYXQgeW91IGFyZSBtYXBwaW5nIG92ZXIgaW4gdGhlIGFib3ZlIGZ1bmN0aW9uIChwcm9wcy5zaG93cylcbi8vICAgICAgICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4vLyAgICAgfTtcbi8vIH07XG5cbi8vIGV4cG9ydCBkZWZhdWx0IEluZGV4O1xuXG5cblxuXG4vLyBzdHlsaW5nIGNvbXBvbmVudHNcbmZ1bmN0aW9uIGdldFBvc3RzKCkge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAge2dldFBvc3RzKCkubWFwKHBvc3QgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGE+e3Bvc3QudGl0bGV9PC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICBoMSxcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDVweCAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L0xheW91dD5cbiAgICApXG59Il19 */\\n/*@ sourceURL=/Users/abby.gottlich/Documents/hello-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/abby.gottlich/Documents/hello-next/pages/index.js"],"names":["Layout","Link","getPosts","map","post","id","title"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;;AACA,SAASC,QAAT,GAAoB;AAChB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,GAAGC,GAAX,CAAe,UAAAC,IAAI;AAAA,WAChB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADJ,CADJ,CADgB;AAAA,GAAnB,CADL,CAFJ;AAAA;AAAA;AAAA,yyLADJ;AAsCH","sourcesContent":["import Layout from \"../comps/MyLayout\";\nimport Link from \"next/link\";\n// import fetch from 'isomorphic-unfetch';\n// import pageLayout from \"../comps/MyLayout\";\n// import contentLayout from \"../comps/MyLayout\";\n\n// Method #1 - using props.children\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <p>Hello Next.js</p>\n//         </Layout>\n//     )\n// };\n\n// Method #2 - Layout as a Higher Order Component\n// const Page = () => <p>Hello Next.js</p>;\n// export default pageLayout(Page);\n\n// Method #3 - Page content as a prop\n// const indexPageContent = <p>Hello Next.js</p>;\n\n// export default function Index() {\n//     return <Layout content={indexPageContent} />\n// }\n\n\n\n\n// blog post code\n// const PostLink = props => (\n//     <li>\n//         {/* this is basically saying, link to the [id] file, but make the path the same as the prop id below */}\n//         <Link href=\"p/[id]\" as={`/p/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// );\n// export default function Blog() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"hello-nextjs\" />\n//                 <PostLink id=\"learn-nextjs\" />\n//                 <PostLink id=\"deploy-nextjs\" />\n//             </ul>\n//         </Layout>\n//     );\n// }\n\n\n\n\n// batman shows code\n// getting props from Index.getInitialProps below\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {/* mapping over the returned shows object from function below */}\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     {/* actually routing you to [id].js page, but displaying the show id in the url */}\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n\n// // whatever this function returns will be the props for the Index function above\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n\n//     // this console log only shows up in the server console because when the site is first rendered, it renders on the server side\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     // console.log(data);\n\n//     return {\n//         // what you are mapping over in the above function (props.shows)\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\n// export default Index;\n\n\n\n\n// styling components\nfunction getPosts() {\n    return (\n        <Layout>\n            <h1>My Blog</h1>\n            <ul>\n                {getPosts().map(post => (\n                    <li key={post.id}>\n                        <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n                            <a>{post.title}</a>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <style jsx>{`\n                h1,\n                a {\n                    font-family: 'Arial;\n                }\n\n                ul {\n                    padding: 0;\n                }\n\n                li {\n                    list-style: none;\n                    margin: 5px 0;\n                }\n\n                a {\n                    text-decoration: none;\n                    color: blue;\n                }\n\n                a:hover {\n                    opacity: 0.6;\n                }\n            `}</style>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}