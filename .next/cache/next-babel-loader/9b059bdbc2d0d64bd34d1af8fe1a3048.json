{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../comps/MyLayout\";\nimport Link from \"next/link\"; // import fetch from 'isomorphic-unfetch';\n// import pageLayout from \"../comps/MyLayout\";\n// import contentLayout from \"../comps/MyLayout\";\n// Method #1 - using props.children\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <p>Hello Next.js</p>\n//         </Layout>\n//     )\n// };\n// Method #2 - Layout as a Higher Order Component\n// const Page = () => <p>Hello Next.js</p>;\n// export default pageLayout(Page);\n// Method #3 - Page content as a prop\n// const indexPageContent = <p>Hello Next.js</p>;\n// export default function Index() {\n//     return <Layout content={indexPageContent} />\n// }\n// blog post code\n// const PostLink = props => (\n//     <li>\n//         {/* this is basically saying, link to the [id] file, but make the path the same as the prop id below */}\n//         <Link href=\"p/[id]\" as={`/p/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// );\n// export default function Blog() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"hello-nextjs\" />\n//                 <PostLink id=\"learn-nextjs\" />\n//                 <PostLink id=\"deploy-nextjs\" />\n//             </ul>\n//         </Layout>\n//     );\n// }\n// batman shows code\n// getting props from Index.getInitialProps below\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {/* mapping over the returned shows object from function below */}\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     {/* actually routing you to [id].js page, but displaying the show id in the url */}\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n// // whatever this function returns will be the props for the Index function above\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     // this console log only shows up in the server console because when the site is first rendered, it renders on the server side\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     // console.log(data);\n//     return {\n//         // what you are mapping over in the above function (props.shows)\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n// export default Index;\n// styling components\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nconst PostLink = ({\n  post\n}) => __jsx(\"li\", {\n  className: \"jsx-1341333550\"\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${post.id}`\n}, __jsx(\"a\", {\n  className: \"jsx-1341333550\"\n}, post.title)), __jsx(_JSXStyle, {\n  id: \"1341333550\"\n}, [\"li.jsx-1341333550{list-style:none;margin:5px 0;}\", \"a.jsx-1341333550{-webkit-text-decoration:none;text-decoration:none;color:blue;font-family:'Arial';}\", \"a.jsx-1341333550:hover{opacity:0.6;}\"]));\n\nexport default function Blog() {\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"jsx-2655321838\"\n  }, \"My Blog\"), __jsx(\"ul\", {\n    className: \"jsx-2655321838\"\n  }, getPosts().map(post => __jsx(PostLink, {\n    key: post.id,\n    post: post\n  }))), __jsx(_JSXStyle, {\n    id: \"2655321838\"\n  }, [\"h1.jsx-2655321838,a.jsx-2655321838{font-family:'Arial';}\", \"ul.jsx-2655321838{padding:0;}\"]));\n}","map":null,"metadata":{},"sourceType":"module"}