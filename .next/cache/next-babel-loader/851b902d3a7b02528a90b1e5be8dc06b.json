{"ast":null,"code":"var _jsxFileName = \"/Users/abby.gottlich/Documents/hello-next/comps/MyLayout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Header from \"./Header\";\nconst layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n}; // Method #1 - using props.children\n// This method will render all of the child tags you put inside of the Layout tag within your index/about pages\n\nconst Layout = props => __jsx(\"div\", {\n  style: layoutStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}), props.children);\n\nexport default Layout; // Method #2 - Layout as a Higher Order Component\n// This method takes in the variable Page that was created in your index/about\n// pages that has been set equal to the content you want displayed and renders it\n\nconst pageLayout = Page => {\n  return () => __jsx(\"div\", {\n    style: layoutStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }));\n}; // export default pageLayout;\n// Method #3 - Page content as a prop\n// This method takes in props that were given to the Layout tag in your index/about\n// pages and renders whichever prop you \"call\", in this case \"content\"\n\n\nconst contentLayout = props => __jsx(\"div\", {\n  style: layoutStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, __jsx(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }\n}), props.content); // export default contentLayout;","map":{"version":3,"sources":["/Users/abby.gottlich/Documents/hello-next/comps/MyLayout.js"],"names":["Header","layoutStyle","margin","padding","border","Layout","props","children","pageLayout","Page","contentLayout","content"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE,EADQ;AAEhBC,EAAAA,OAAO,EAAE,EAFO;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAApB,C,CAMA;AACA;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAChB;AAAK,EAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEKK,KAAK,CAACC,QAFX,CADJ;;AAOA,eAAeF,MAAf,C,CAIA;AACA;AACA;;AACA,MAAMG,UAAU,GAAGC,IAAI,IAAI;AACvB,SAAO,MACH;AAAK,IAAA,KAAK,EAAER,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAPD,C,CASA;AAGA;AACA;AACA;;;AACA,MAAMS,aAAa,GAAGJ,KAAK,IACvB;AAAK,EAAA,KAAK,EAAEL,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEKK,KAAK,CAACK,OAFX,CADJ,C,CAOA","sourcesContent":["import Header from \"./Header\";\n\nconst layoutStyle = {\n    margin: 20,\n    padding: 20,\n    border: '1px solid #DDD'\n};\n\n// Method #1 - using props.children\n// This method will render all of the child tags you put inside of the Layout tag within your index/about pages\nconst Layout = props => (\n    <div style={layoutStyle}>\n        <Header />\n        {props.children}\n    </div>\n);\n\nexport default Layout;\n\n\n\n// Method #2 - Layout as a Higher Order Component\n// This method takes in the variable Page that was created in your index/about\n// pages that has been set equal to the content you want displayed and renders it\nconst pageLayout = Page => {\n    return () => (\n        <div style={layoutStyle}>\n            <Header />\n            <Page />\n        </div>\n    );\n};\n\n// export default pageLayout;\n\n\n// Method #3 - Page content as a prop\n// This method takes in props that were given to the Layout tag in your index/about\n// pages and renders whichever prop you \"call\", in this case \"content\"\nconst contentLayout = props => (\n    <div style={layoutStyle}>\n        <Header />\n        {props.content}\n    </div>\n);\n\n// export default contentLayout;\n\n"]},"metadata":{},"sourceType":"module"}