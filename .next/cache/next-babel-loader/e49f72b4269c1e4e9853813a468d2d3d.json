{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/abby.gottlich/Documents/hello-next/pages/p/[id].js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../comps/MyLayout'; // import fetch from 'isomorphic-unfetch';\n// blog post code\n// export default function Post() {\n//     const router = useRouter();\n//     return (\n//         <Layout>\n//             {/* displaying whatever the url was set to as the h1 */}\n//             <h1>{router.query.id}</h1>\n//             <p>This is the blog post content.</p>\n//         </Layout>\n//     );\n// }\n// batman shows code\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         {/* the .replace stuff is replcaing the inline <p></p> tags with an empty string */}\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium} />\n//     </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//     const { id } = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n//     // because this whole file is technically \"nested\" inside of a Link tag (in index.js),\n//     // this console log displays in the browser console only because we navigated to the post via the client side\n//     // when you click on a <Link> component, the page transition takes place in the browser without making a request to the server\n//     console.log(`Fetched show: ${show.name}`);\n//     // console.log(show);\n//     return { show };\n// };\n// export default Post;\n// styling components\n\nexport default _s(function () {\n  _s();\n\n  var router = useRouter();\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3242420245\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, router.query.id), __jsx(\"div\", {\n    className: \"jsx-3242420245\" + \" \" + \"markdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Markdown, {\n    source: \"\\nThis is our blog post.\\nYes. We can have a [link](/link).\\nAnd we can have a title as well.\\n\\n### This is a title\\n\\nAnd here's the content.\\n                \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"3242420245\",\n    __self: _this\n  }, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hYmJ5LmdvdHRsaWNoL0RvY3VtZW50cy9oZWxsby1uZXh0L3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRStCLEFBR3lDLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKWixPQUsyQixDQWQzQix3QkFlQSxNQVhhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2FiYnkuZ290dGxpY2gvRG9jdW1lbnRzL2hlbGxvLW5leHQvcGFnZXMvcC9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vLi4vY29tcHMvTXlMYXlvdXQnO1xuLy8gaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbi8vIGJsb2cgcG9zdCBjb2RlXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQb3N0KCkge1xuLy8gICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuXG4vLyAgICAgcmV0dXJuIChcbi8vICAgICAgICAgPExheW91dD5cbi8vICAgICAgICAgICAgIHsvKiBkaXNwbGF5aW5nIHdoYXRldmVyIHRoZSB1cmwgd2FzIHNldCB0byBhcyB0aGUgaDEgKi99XG4vLyAgICAgICAgICAgICA8aDE+e3JvdXRlci5xdWVyeS5pZH08L2gxPlxuLy8gICAgICAgICAgICAgPHA+VGhpcyBpcyB0aGUgYmxvZyBwb3N0IGNvbnRlbnQuPC9wPlxuLy8gICAgICAgICA8L0xheW91dD5cbi8vICAgICApO1xuLy8gfVxuXG5cblxuXG4vLyBiYXRtYW4gc2hvd3MgY29kZVxuLy8gY29uc3QgUG9zdCA9IHByb3BzID0+IChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgICA8aDE+e3Byb3BzLnNob3cubmFtZX08L2gxPlxuLy8gICAgICAgICB7LyogdGhlIC5yZXBsYWNlIHN0dWZmIGlzIHJlcGxjYWluZyB0aGUgaW5saW5lIDxwPjwvcD4gdGFncyB3aXRoIGFuIGVtcHR5IHN0cmluZyAqL31cbi8vICAgICAgICAgPHA+e3Byb3BzLnNob3cuc3VtbWFyeS5yZXBsYWNlKC88Wy9dP1twYl0+L2csICcnKX08L3A+XG4vLyAgICAgICAgIDxpbWcgc3JjPXtwcm9wcy5zaG93LmltYWdlLm1lZGl1bX0gLz5cbi8vICAgICA8L0xheW91dD5cbi8vICk7XG5cbi8vIFBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuLy8gICAgIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnk7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH1gKTtcbi8vICAgICBjb25zdCBzaG93ID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICAgIC8vIGJlY2F1c2UgdGhpcyB3aG9sZSBmaWxlIGlzIHRlY2huaWNhbGx5IFwibmVzdGVkXCIgaW5zaWRlIG9mIGEgTGluayB0YWcgKGluIGluZGV4LmpzKSxcbi8vICAgICAvLyB0aGlzIGNvbnNvbGUgbG9nIGRpc3BsYXlzIGluIHRoZSBicm93c2VyIGNvbnNvbGUgb25seSBiZWNhdXNlIHdlIG5hdmlnYXRlZCB0byB0aGUgcG9zdCB2aWEgdGhlIGNsaWVudCBzaWRlXG4vLyAgICAgLy8gd2hlbiB5b3UgY2xpY2sgb24gYSA8TGluaz4gY29tcG9uZW50LCB0aGUgcGFnZSB0cmFuc2l0aW9uIHRha2VzIHBsYWNlIGluIHRoZSBicm93c2VyIHdpdGhvdXQgbWFraW5nIGEgcmVxdWVzdCB0byB0aGUgc2VydmVyXG4vLyAgICAgY29uc29sZS5sb2coYEZldGNoZWQgc2hvdzogJHtzaG93Lm5hbWV9YCk7XG4vLyAgICAgLy8gY29uc29sZS5sb2coc2hvdyk7XG5cbi8vICAgICByZXR1cm4geyBzaG93IH07XG4vLyB9O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBQb3N0O1xuXG5cblxuLy8gc3R5bGluZyBjb21wb25lbnRzXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gICAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPExheW91dD5cbiAgICAgICAgICAgIDxoMT57cm91dGVyLnF1ZXJ5LmlkfTwvaDE+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtkb3duXCI+XG4gICAgICAgICAgICAgICAgPE1hcmtkb3duXG4gICAgICAgICAgICAgICAgc291cmNlPXtgXG5UaGlzIGlzIG91ciBibG9nIHBvc3QuXG5ZZXMuIFdlIGNhbiBoYXZlIGEgW2xpbmtdKC9saW5rKS5cbkFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHdlbGwuXG5cbiMjIyBUaGlzIGlzIGEgdGl0bGVcblxuQW5kIGhlcmUncyB0aGUgY29udGVudC5cbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgICAgICAgICAgLm1hcmtkb3duIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAubWFya2Rvd24gYSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAubWFya2Rvd24gYTpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIC5tYXJrZG93biBoMyB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKTtcbn07Il19 */\\n/*@ sourceURL=/Users/abby.gottlich/Documents/hello-next/pages/p/[id].js */\"));\n}, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});","map":{"version":3,"sources":["/Users/abby.gottlich/Documents/hello-next/pages/p/[id].js"],"names":["useRouter","Markdown","Layout","router","query","id"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;;AACA,kBAAe,YAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADJ,EAEI;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACA,IAAA,MAAM,qKADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAAA;AAAA;AAAA,gnIADJ;AAsCH,CAxCD;AAAA,UACmBL,SADnB;AAAA","sourcesContent":["import { useRouter } from 'next/router';\nimport Markdown from 'react-markdown';\nimport Layout from '../../comps/MyLayout';\n// import fetch from 'isomorphic-unfetch';\n\n// blog post code\n// export default function Post() {\n//     const router = useRouter();\n\n//     return (\n//         <Layout>\n//             {/* displaying whatever the url was set to as the h1 */}\n//             <h1>{router.query.id}</h1>\n//             <p>This is the blog post content.</p>\n//         </Layout>\n//     );\n// }\n\n\n\n\n// batman shows code\n// const Post = props => (\n//     <Layout>\n//         <h1>{props.show.name}</h1>\n//         {/* the .replace stuff is replcaing the inline <p></p> tags with an empty string */}\n//         <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n//         <img src={props.show.image.medium} />\n//     </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//     const { id } = context.query;\n//     const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//     const show = await res.json();\n\n//     // because this whole file is technically \"nested\" inside of a Link tag (in index.js),\n//     // this console log displays in the browser console only because we navigated to the post via the client side\n//     // when you click on a <Link> component, the page transition takes place in the browser without making a request to the server\n//     console.log(`Fetched show: ${show.name}`);\n//     // console.log(show);\n\n//     return { show };\n// };\n\n// export default Post;\n\n\n\n// styling components\nexport default () => {\n    const router = useRouter();\n    return (\n        <Layout>\n            <h1>{router.query.id}</h1>\n            <div className=\"markdown\">\n                <Markdown\n                source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as well.\n\n### This is a title\n\nAnd here's the content.\n                `}\n                />\n            </div>\n            <style jsx global>{`\n                .markdown {\n                    font-family: 'Arial';\n                  }\n          \n                  .markdown a {\n                    text-decoration: none;\n                    color: blue;\n                  }\n          \n                  .markdown a:hover {\n                    opacity: 0.6;\n                  }\n          \n                  .markdown h3 {\n                    margin: 0;\n                    padding: 0;\n                    text-transform: uppercase;\n                  }\n            `}</style>\n        </Layout>\n    );\n};"]},"metadata":{},"sourceType":"module"}