{"ast":null,"code":"var _jsxFileName = \"/Users/abby.gottlich/Documents/hello-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../comps/MyLayout\";\nimport Link from \"next/link\"; // import fetch from 'isomorphic-unfetch';\n// import pageLayout from \"../comps/MyLayout\";\n// import contentLayout from \"../comps/MyLayout\";\n// Method #1 - using props.children\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <p>Hello Next.js</p>\n//         </Layout>\n//     )\n// };\n// Method #2 - Layout as a Higher Order Component\n// const Page = () => <p>Hello Next.js</p>;\n// export default pageLayout(Page);\n// Method #3 - Page content as a prop\n// const indexPageContent = <p>Hello Next.js</p>;\n// export default function Index() {\n//     return <Layout content={indexPageContent} />\n// }\n// blog post code\n// const PostLink = props => (\n//     <li>\n//         {/* this is basically saying, link to the [id] file, but make the path the same as the prop id below */}\n//         <Link href=\"p/[id]\" as={`/p/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// );\n// export default function Blog() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"hello-nextjs\" />\n//                 <PostLink id=\"learn-nextjs\" />\n//                 <PostLink id=\"deploy-nextjs\" />\n//             </ul>\n//         </Layout>\n//     );\n// }\n// batman shows code\n// getting props from Index.getInitialProps below\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {/* mapping over the returned shows object from function below */}\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     {/* actually routing you to [id].js page, but displaying the show id in the url */}\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n// // whatever this function returns will be the props for the Index function above\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     // this console log only shows up in the server console because when the site is first rendered, it renders on the server side\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     // console.log(data);\n//     return {\n//         // what you are mapping over in the above function (props.shows)\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n// export default Index;\n// styling components\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-nextjs',\n    title: 'Learning Next.js is Awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy Apps with ZEIT'\n  }];\n}\n\nexport default function Blog() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-739057071\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"My Blog\"), __jsx(\"ul\", {\n    className: \"jsx-739057071\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, getPosts().map(post => __jsx(\"li\", {\n    key: post.id,\n    className: \"jsx-739057071\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${post.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"jsx-739057071\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, post.title))))), __jsx(_JSXStyle, {\n    id: \"739057071\",\n    __self: this\n  }, \"h1.jsx-739057071,a.jsx-739057071{font-family:'Arial';}ul.jsx-739057071{padding:0;}li.jsx-739057071{list-style:none;margin:5px 0;}a.jsx-739057071{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-739057071:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hYmJ5LmdvdHRsaWNoL0RvY3VtZW50cy9oZWxsby1uZXh0L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Id0IsQUFJeUMsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJoQixFQWNBLElBVmlCLElBUmpCLFNBU0EscUJBSWUsV0FDZiIsImZpbGUiOiIvVXNlcnMvYWJieS5nb3R0bGljaC9Eb2N1bWVudHMvaGVsbG8tbmV4dC9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBzL015TGF5b3V0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJztcbi8vIGltcG9ydCBwYWdlTGF5b3V0IGZyb20gXCIuLi9jb21wcy9NeUxheW91dFwiO1xuLy8gaW1wb3J0IGNvbnRlbnRMYXlvdXQgZnJvbSBcIi4uL2NvbXBzL015TGF5b3V0XCI7XG5cbi8vIE1ldGhvZCAjMSAtIHVzaW5nIHByb3BzLmNoaWxkcmVuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbi8vICAgICByZXR1cm4gKFxuLy8gICAgICAgICA8TGF5b3V0PlxuLy8gICAgICAgICAgICAgPHA+SGVsbG8gTmV4dC5qczwvcD5cbi8vICAgICAgICAgPC9MYXlvdXQ+XG4vLyAgICAgKVxuLy8gfTtcblxuLy8gTWV0aG9kICMyIC0gTGF5b3V0IGFzIGEgSGlnaGVyIE9yZGVyIENvbXBvbmVudFxuLy8gY29uc3QgUGFnZSA9ICgpID0+IDxwPkhlbGxvIE5leHQuanM8L3A+O1xuLy8gZXhwb3J0IGRlZmF1bHQgcGFnZUxheW91dChQYWdlKTtcblxuLy8gTWV0aG9kICMzIC0gUGFnZSBjb250ZW50IGFzIGEgcHJvcFxuLy8gY29uc3QgaW5kZXhQYWdlQ29udGVudCA9IDxwPkhlbGxvIE5leHQuanM8L3A+O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbi8vICAgICByZXR1cm4gPExheW91dCBjb250ZW50PXtpbmRleFBhZ2VDb250ZW50fSAvPlxuLy8gfVxuXG5cblxuXG4vLyBibG9nIHBvc3QgY29kZVxuLy8gY29uc3QgUG9zdExpbmsgPSBwcm9wcyA9PiAoXG4vLyAgICAgPGxpPlxuLy8gICAgICAgICB7LyogdGhpcyBpcyBiYXNpY2FsbHkgc2F5aW5nLCBsaW5rIHRvIHRoZSBbaWRdIGZpbGUsIGJ1dCBtYWtlIHRoZSBwYXRoIHRoZSBzYW1lIGFzIHRoZSBwcm9wIGlkIGJlbG93ICovfVxuLy8gICAgICAgICA8TGluayBocmVmPVwicC9baWRdXCIgYXM9e2AvcC8ke3Byb3BzLmlkfWB9PlxuLy8gICAgICAgICAgICAgPGE+e3Byb3BzLmlkfTwvYT5cbi8vICAgICAgICAgPC9MaW5rPlxuLy8gICAgIDwvbGk+XG4vLyApO1xuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQmxvZygpIHtcbi8vICAgICByZXR1cm4gKFxuLy8gICAgICAgICA8TGF5b3V0PlxuLy8gICAgICAgICAgICAgPGgxPk15IEJsb2c8L2gxPlxuLy8gICAgICAgICAgICAgPHVsPlxuLy8gICAgICAgICAgICAgICAgIDxQb3N0TGluayBpZD1cImhlbGxvLW5leHRqc1wiIC8+XG4vLyAgICAgICAgICAgICAgICAgPFBvc3RMaW5rIGlkPVwibGVhcm4tbmV4dGpzXCIgLz5cbi8vICAgICAgICAgICAgICAgICA8UG9zdExpbmsgaWQ9XCJkZXBsb3ktbmV4dGpzXCIgLz5cbi8vICAgICAgICAgICAgIDwvdWw+XG4vLyAgICAgICAgIDwvTGF5b3V0PlxuLy8gICAgICk7XG4vLyB9XG5cblxuXG5cbi8vIGJhdG1hbiBzaG93cyBjb2RlXG4vLyBnZXR0aW5nIHByb3BzIGZyb20gSW5kZXguZ2V0SW5pdGlhbFByb3BzIGJlbG93XG4vLyBjb25zdCBJbmRleCA9IHByb3BzID0+IChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbi8vICAgICAgICAgPHVsPlxuLy8gICAgICAgICAgICAgey8qIG1hcHBpbmcgb3ZlciB0aGUgcmV0dXJuZWQgc2hvd3Mgb2JqZWN0IGZyb20gZnVuY3Rpb24gYmVsb3cgKi99XG4vLyAgICAgICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuLy8gICAgICAgICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuLy8gICAgICAgICAgICAgICAgICAgICB7LyogYWN0dWFsbHkgcm91dGluZyB5b3UgdG8gW2lkXS5qcyBwYWdlLCBidXQgZGlzcGxheWluZyB0aGUgc2hvdyBpZCBpbiB0aGUgdXJsICovfVxuLy8gICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtzaG93LmlkfWB9PlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+XG4vLyAgICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbi8vICAgICAgICAgICAgICAgICA8L2xpPlxuLy8gICAgICAgICAgICAgKSl9XG4vLyAgICAgICAgIDwvdWw+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyApO1xuXG4vLyAvLyB3aGF0ZXZlciB0aGlzIGZ1bmN0aW9uIHJldHVybnMgd2lsbCBiZSB0aGUgcHJvcHMgZm9yIHRoZSBJbmRleCBmdW5jdGlvbiBhYm92ZVxuLy8gSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4vLyAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4vLyAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbi8vICAgICAvLyB0aGlzIGNvbnNvbGUgbG9nIG9ubHkgc2hvd3MgdXAgaW4gdGhlIHNlcnZlciBjb25zb2xlIGJlY2F1c2Ugd2hlbiB0aGUgc2l0ZSBpcyBmaXJzdCByZW5kZXJlZCwgaXQgcmVuZGVycyBvbiB0aGUgc2VydmVyIHNpZGVcbi8vICAgICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuLy8gICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpO1xuXG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgLy8gd2hhdCB5b3UgYXJlIG1hcHBpbmcgb3ZlciBpbiB0aGUgYWJvdmUgZnVuY3Rpb24gKHByb3BzLnNob3dzKVxuLy8gICAgICAgICBzaG93czogZGF0YS5tYXAoZW50cnkgPT4gZW50cnkuc2hvdylcbi8vICAgICB9O1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgSW5kZXg7XG5cblxuXG5cbi8vIHN0eWxpbmcgY29tcG9uZW50c1xuZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgeyBpZDogJ2hlbGxvLW5leHRqcycsIHRpdGxlOiAnSGVsbG8gTmV4dC5qcycgfSxcbiAgICAgICAgeyBpZDogJ2xlYXJuLW5leHRqcycsIHRpdGxlOiAnTGVhcm5pbmcgTmV4dC5qcyBpcyBBd2Vzb21lJyB9LFxuICAgICAgICB7IGlkOiAnZGVwbG95LW5leHRqcycsIHRpdGxlOiAnRGVwbG95IEFwcHMgd2l0aCBaRUlUJyB9XG4gICAgXTtcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxMYXlvdXQ+XG4gICAgICAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAge2dldFBvc3RzKCkubWFwKHBvc3QgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8bGkga2V5PXtwb3N0LmlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Bvc3QuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGE+e3Bvc3QudGl0bGV9PC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICBoMSxcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdBcmlhbCc7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBhOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9MYXlvdXQ+XG4gICAgKTtcbn0iXX0= */\\n/*@ sourceURL=/Users/abby.gottlich/Documents/hello-next/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/abby.gottlich/Documents/hello-next/pages/index.js"],"names":["Layout","Link","getPosts","id","title","Blog","map","post"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;;AACA,SAASC,QAAT,GAAoB;AAChB,SAAO,CACH;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADG,EAEH;AAAED,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFG,EAGH;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHG,CAAP;AAKH;;AAGD,eAAe,SAASC,IAAT,GAAgB;AAC3B,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,GAAGI,GAAX,CAAeC,IAAI,IAChB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKI,IAAI,CAACJ,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,IAAI,CAACH,KAAT,CADJ,CADJ,CADH,CADL,CAFJ;AAAA;AAAA;AAAA,2gMADJ;AAsCH","sourcesContent":["import Layout from \"../comps/MyLayout\";\nimport Link from \"next/link\";\n// import fetch from 'isomorphic-unfetch';\n// import pageLayout from \"../comps/MyLayout\";\n// import contentLayout from \"../comps/MyLayout\";\n\n// Method #1 - using props.children\n// export default function Index() {\n//     return (\n//         <Layout>\n//             <p>Hello Next.js</p>\n//         </Layout>\n//     )\n// };\n\n// Method #2 - Layout as a Higher Order Component\n// const Page = () => <p>Hello Next.js</p>;\n// export default pageLayout(Page);\n\n// Method #3 - Page content as a prop\n// const indexPageContent = <p>Hello Next.js</p>;\n\n// export default function Index() {\n//     return <Layout content={indexPageContent} />\n// }\n\n\n\n\n// blog post code\n// const PostLink = props => (\n//     <li>\n//         {/* this is basically saying, link to the [id] file, but make the path the same as the prop id below */}\n//         <Link href=\"p/[id]\" as={`/p/${props.id}`}>\n//             <a>{props.id}</a>\n//         </Link>\n//     </li>\n// );\n// export default function Blog() {\n//     return (\n//         <Layout>\n//             <h1>My Blog</h1>\n//             <ul>\n//                 <PostLink id=\"hello-nextjs\" />\n//                 <PostLink id=\"learn-nextjs\" />\n//                 <PostLink id=\"deploy-nextjs\" />\n//             </ul>\n//         </Layout>\n//     );\n// }\n\n\n\n\n// batman shows code\n// getting props from Index.getInitialProps below\n// const Index = props => (\n//     <Layout>\n//         <h1>Batman TV Shows</h1>\n//         <ul>\n//             {/* mapping over the returned shows object from function below */}\n//             {props.shows.map(show => (\n//                 <li key={show.id}>\n//                     {/* actually routing you to [id].js page, but displaying the show id in the url */}\n//                     <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                         <a>{show.name}</a>\n//                     </Link>\n//                 </li>\n//             ))}\n//         </ul>\n//     </Layout>\n// );\n\n// // whatever this function returns will be the props for the Index function above\n// Index.getInitialProps = async function() {\n//     const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n\n//     // this console log only shows up in the server console because when the site is first rendered, it renders on the server side\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     // console.log(data);\n\n//     return {\n//         // what you are mapping over in the above function (props.shows)\n//         shows: data.map(entry => entry.show)\n//     };\n// };\n\n// export default Index;\n\n\n\n\n// styling components\nfunction getPosts() {\n    return [\n        { id: 'hello-nextjs', title: 'Hello Next.js' },\n        { id: 'learn-nextjs', title: 'Learning Next.js is Awesome' },\n        { id: 'deploy-nextjs', title: 'Deploy Apps with ZEIT' }\n    ];\n}\n\n\nexport default function Blog() {\n    return (\n        <Layout>\n            <h1>My Blog</h1>\n            <ul>\n                {getPosts().map(post => (\n                    <li key={post.id}>\n                        <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n                            <a>{post.title}</a>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <style jsx>{`\n                h1,\n                a {\n                    font-family: 'Arial';\n                }\n\n                ul {\n                    padding: 0;\n                }\n\n                li {\n                    list-style: none;\n                    margin: 5px 0;\n                }\n\n                a {\n                    text-decoration: none;\n                    color: blue;\n                }\n\n                a:hover {\n                    opacity: 0.6;\n                }\n            `}</style>\n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}